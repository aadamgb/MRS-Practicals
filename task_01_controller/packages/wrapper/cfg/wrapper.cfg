#!/usr/bin/env python
PACKAGE = "task_01_wrapper"

import roslib
roslib.load_manifest(PACKAGE)

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

pos_noise = gen.add_group("Artificial position noise")

pos_noise.add("position_measurement_std", double_t, 0, "X, Y, Z position noise, std", 0.010, 0.0, 1.0)
pos_noise.add("acceleration_measurement_std", double_t, 0, "X, Y, Z acceleration noise, std", 0.0001, 0.0, 1.0)

emergency = gen.add_group("Emergency controller")
emergency.add("emergency_enable", bool_t, 0, "Enable emergency controller", False)

emergency.add("check_height", bool_t, 0, "Enable height checking", True)
emergency.add("max_height_err", double_t, 0, "Height control error threshold [m]", 1.0, 0.0, 10.0)

emergency.add("check_hrz_pos", bool_t, 0, "Enable horizontal position checking", True)
emergency.add("max_hrz_pos_err", double_t, 0, "Horizontal position control error threshold [m]", 20.0, 0.0, 50.0)

emergency.add("check_acc", bool_t, 0, "Enable acceleration checking", False)
emergency.add("max_acc", double_t, 0, "Acceleration control error threshold [m/s^2]", 10.0, 0.0, 50.0)

emergency.add("go_home", bool_t, 0, "Enable automated return to the home position", True)
emergency.add("home_x", double_t, 0, "X coordinate of the home position", 0.0, -100.0, 100.0)
emergency.add("home_y", double_t, 0, "Y coordinate of the home position", 0.0, -100.0, 100.0)
emergency.add("home_z", double_t, 0, "Z coordinate of the home position", 5.0, -100.0, 100.0)
emergency.add("home_heading", double_t, 0, "Heading of the home position", 0.0, -3.14, 3.14)

exit(gen.generate(PACKAGE, "Wrapper", "wrapper"))
